#include <stdio.h>
#define MAX_TERMS 100

// Structure to represent a term in a polynomial
typedef struct {
    int coefficient;
    int exponent;
} Term;

// Function to perform polynomial addition
void addPolynomials(Term poly1[], int size1, Term poly2[], int size2, Term result[], int *sizeResult) {
    int i = 0, j = 0, k = 0;

    while (i < size1 && j < size2) {
        if (poly1[i].exponent > poly2[j].exponent) {
            result[k++] = poly1[i++];
        } else if (poly1[i].exponent < poly2[j].exponent) {
            result[k++] = poly2[j++];
        } else {
            result[k].exponent = poly1[i].exponent;
            result[k++].coefficient = poly1[i++].coefficient + poly2[j++].coefficient;
        }
    }

    // Copy any remaining terms from poly1
    while (i < size1) {
        result[k++] = poly1[i++];
    }

    // Copy any remaining terms from poly2
    while (j < size2) {
        result[k++] = poly2[j++];
    }

    *sizeResult = k;
}

// Function to input a polynomial from the user
void inputPolynomial(Term poly[], int size) {
    printf("Enter the coefficients and exponents of the polynomial:\n");
    for (int i = 0; i < size; i++) {
        printf("Coefficient for term %d: ", i + 1);
        scanf("%d", &poly[i].coefficient);

        printf("Exponent for term %d: ", i + 1);
        scanf("%d", &poly[i].exponent);
    }
}

// Function to display a polynomial
void displayPolynomial(Term poly[], int size) {
    for (int i = 0; i < size - 1; i++) {
        printf("%dx^%d + ", poly[i].coefficient, poly[i].exponent);
    }
    printf("%dx^%d\n", poly[size - 1].coefficient, poly[size - 1].exponent);
}

int main() {

    Term poly1[MAX_TERMS], poly2[MAX_TERMS], result[MAX_TERMS];
    int size1, size2, sizeResult;

    printf("Enter the number of terms in the first polynomial: ");
    scanf("%d", &size1);
    inputPolynomial(poly1, size1);

    printf("Enter the number of terms in the second polynomial: ");
    scanf("%d", &size2);
    inputPolynomial(poly2, size2);

    // Perform polynomial addition
    addPolynomials(poly1, size1, poly2, size2, result, &sizeResult);

    // Display the result
    printf("Resultant polynomial after addition: ");
    displayPolynomial(result, sizeResult);

    return 0;
}
